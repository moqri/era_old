genome = "hg38",
TCGA = FALSE)
sig.diff <- get.diff.meth(data = mae,
group.col = "Group",
group1 =  "t",
group2 = "n",
minSubgroupFrac = 1, # if supervised mode set to 1
sig.dif = .3,
diff.dir = "hypo", # hyper = Search for hypomethylated probes in group 1
cores = 4,
dir.out ="result",
pvalue = 0.9)
enriched.motif <- get.enriched.motif(data = mae,
probes = sig.diff$probe,
dir.out = "result",
label = "hyper",
min.incidence = 10,
lower.OR = 4)
TF <- get.TFs(data = mae,
group.col = "Group",
group1 =  "n",
group2 = "t",
mode = "unsupervised",
enriched.motif = enriched.motif,
dir.out = "result",
cores = 1,
label = "hyper")
nearGenes <- GetNearGenes(data = mae,
probes = sig.diff$probe,
numFlankingGenes = 20) # 10 upstream and 10 dowstream genes
Hyper.pair <- get.pair(data = mae,
group.col = "Group",
group1 =  "n",
group2 = "t",
nearGenes = nearGenes,
mode = "unsupervised",
permu.dir = "result/permu",
permu.size = 100, # Please set to 100000 to get significant results
raw.pvalue = 0.1,
Pe = 0.01, # Please set to 0.001 to get significant results
filter.probes = TRUE, # See preAssociationProbeFiltering function
filter.percentage = 0.05,
filter.portion = 0.3,
dir.out = "result",
cores = 1,
label = "hyper")
cpg='cg08878436'
scatter.plot(data = mae,
byProbe = list(probe = c(cpg), numFlankingGenes = 20),
category = "Group",
lm = TRUE, # Draw linear regression curve
save = FALSE)
load("result/getTF.hypo.TFs.with.motif.pvalue.rda")
motif <- colnames(TF.meth.cor)[1]
TF.rank.plot(motif.pvalue = TF.meth.cor,
motif = motif,
save = FALSE)
mae <- createMAE(exp = exp,
met = met,
save = TRUE,
filter.probes = distal.probes,
colData = colData,
sampleMap = sampleMap,
linearize.exp = TRUE,
save.filename = "mae.rda",
met.platform = "EPIC",
genome = "hg38",
TCGA = FALSE)
setwd("~/age/era/motfi")
library(MultiAssayExperiment)
library(ELMER)
library(gridExtra)
met <- read.csv("~/age/era/data/meth.csv", row.names=1)
exp <- read.csv("~/age/era/data/expf.csv", row.names=1)
exp=exp[colnames(met)]
assay <- c(rep("DNA methylation", ncol(met)),
rep("Gene expression", ncol(exp)))
primary <- c(colnames(met),colnames(exp))
colname <- c(colnames(met),colnames(exp))
sampleMap <- data.frame(assay,primary,colname)
distal.probes <- get.feature.probe(genome = "hg38",
met.platform = "EPIC")
colData <- data.frame(sample = colnames(met))
colnames(colData)='primary'
rownames(colData) <- colnames(met)
colData$g=c('n','t','n','t','n','t','n','t')
mae <- createMAE(exp = exp,
met = met,
save = TRUE,
filter.probes = distal.probes,
colData = colData,
sampleMap = sampleMap,
linearize.exp = TRUE,
save.filename = "mae.rda",
met.platform = "EPIC",
genome = "hg38",
TCGA = FALSE)
sig.diff <- get.diff.meth(data = mae,
group.col = "g",
group1 =  "t",
group2 = "n",
minSubgroupFrac = 1, # if supervised mode set to 1
sig.dif = .4,
diff.dir = "hypo", # hyper = Search for hypomethylated probes in group 1
cores = 4,
dir.out ="result",
pvalue = 0.9)
enriched.motif <- get.enriched.motif(data = mae,
probes = sig.diff$probe,
dir.out = "result",
label = "hypo",
min.incidence = 10,
lower.OR = 2)
TF <- get.TFs(data = mae,
group.col = "g",
group1 =  "t",
group2 = "n",
mode = "unsupervised",
enriched.motif = enriched.motif,
dir.out = "result",
cores = 1,
label = "hypo")
nearGenes <- GetNearGenes(data = mae,
probes = sig.diff$probe,
numFlankingGenes = 5) # 10 upstream and 10 dowstream genes
Hypo.pair <- get.pair(data = mae,
group.col = "g",
group1 =  "t",
group2 = "n",
nearGenes = nearGenes,
raw.pvalue = .1,
permu.dir = "result/permu1",
permu.size = 100, # Please set to 100000 to get significant results
mode = "unsupervised",
Pe = .1, # Please set to 0.001 to get significant results
filter.probes = FALSE, # See preAssociationProbeFiltering function
#filter.percentage = 0.03,
#filter.portion = 0.3,
dir.out = "result",
cores = 1,
label = "hypo")
cpg='cg23468453'
scatter.plot(data = mae,
byProbe = list(probe = c(cpg), numFlankingGenes = 10),
category = "g",
lm = TRUE, # Draw linear regression curve
save = FALSE)
m=(Hypo.pair %>% filter(startsWith(Symbol,'RP')))$Probe
g=(Hypo.pair %>% filter(startsWith(Symbol,'RP')))$GeneID
p=c()
for (i in c(1:length(m))){
p[i]=scatter.plot(data = mae,
byPair = list(probe = m[i],
gene = g[i]),
category = "g", save = TRUE, lm_line = TRUE)
}
grid.arrange(p,nrow=3)
load("result/getTF.hypo.TFs.with.motif.pvalue.rda")
motif <- colnames(TF.meth.cor)[1]
TF.rank.plot(motif.pvalue = TF.meth.cor,
motif = motif,
save = FALSE,)
grid.arrange(p,nrow=3)
p[1
]
p[1]
m
Hypo.pair
(Hypo.pair %>% filter(startsWith(Symbol,'RP')))$Probe
library(dplyer)
library(dplyr)
m=(Hypo.pair %>% filter(startsWith(Symbol,'RP')))$Probe
g=(Hypo.pair %>% filter(startsWith(Symbol,'RP')))$GeneID
p=c()
for (i in c(1:length(m))){
p[i]=scatter.plot(data = mae,
byPair = list(probe = m[i],
gene = g[i]),
category = "g", save = TRUE, lm_line = TRUE)
}
grid.arrange(p,nrow=3)
p[1]
p2
p[2]
grid.arrange(p)
p
grid.arrange(p[1],p[2])
grid.arrange(c(p[1],p[2]))
p1
p[1]
p1=p[1]
plot(p1)
grid.arrange(p1)
library(ggplot2)
grid.arrange(grobs =c(p[1],p[2]))
grid.arrange(grobs = c(p[1],p[1]))
grid.arrange(p1,p1)
p=scatter.plot(data = mae,
byPair = list(probe = m[i],
gene = g[i]),
category = "g", save = TRUE, lm_line = TRUE)
grid.arrange(p)
grid.arrange(p,p)
p[i]=scatter.plot(data = mae,
byPair = list(probe = m[i],
gene = g[i]),
category = "g", save = TRUE, lm_line = TRUE)
m=(Hypo.pair %>% filter(startsWith(Symbol,'RP')))$Probe
g=(Hypo.pair %>% filter(startsWith(Symbol,'RP')))$GeneID
p=c()
for (i in c(1:length(m))){
p[i]=scatter.plot(data = mae,
byPair = list(probe = m[i],
gene = g[i]),
category = "g", save = TRUE, lm_line = TRUE)
}
grid.arrange(p[i],p[i])
p=p[i]
grid.arrange(p)
typeof(p)
typeof(p[i])
grid.arrange(p[1])
p
p[1]
m=(Hypo.pair %>% filter(startsWith(Symbol,'RP')))$Probe
g=(Hypo.pair %>% filter(startsWith(Symbol,'RP')))$GeneID
for (i in c(1:length(m))){
scatter.plot(data = mae,
byPair = list(probe = m[i],
gene = g[i]),
category = "g", save = TRUE, lm_line = TRUE)
}
p
for (i in c(1:length(m))){
p=scatter.plot(data = mae,
byPair = list(probe = m[i],
gene = g[i]),
category = "g", save = TRUE, lm_line = TRUE)
}
p
view(p)
p
p=scatter.plot(data = mae,
byPair = list(probe = m[i],
gene = g[i]),
category = "g", save = TRUE, lm_line = TRUE)
for (i in c(1:length(m))){
p=scatter.plot(data = mae,
byPair = list(probe = m[i],
gene = g[i]),
category = "g", save = TRUE, lm_line = TRUE)
p
}
p
typeof(p)
colData$g=c('Aged','Treated','Aged','Treated','Aged','Treated','Aged','Treated')
colData$g=c('Aged','Treated','Aged','Treated','Aged','Treated','Aged','Treated')
mae <- createMAE(exp = exp,
met = met,
save = TRUE,
filter.probes = distal.probes,
colData = colData,
sampleMap = sampleMap,
linearize.exp = TRUE,
save.filename = "mae.rda",
met.platform = "EPIC",
genome = "hg38",
TCGA = FALSE)
sig.diff <- get.diff.meth(data = mae,
group.col = "Aged vs Treated",
group1 =  "Treated",
group2 = "Aged",
minSubgroupFrac = 1, # if supervised mode set to 1
sig.dif = .4,
diff.dir = "hypo", # hyper = Search for hypomethylated probes in group 1
cores = 4,
dir.out ="result",
pvalue = 0.9)
TF <- get.TFs(data = mae,
group.col = "Aged vs Treated",
group1 =  "t",
group2 = "Aged",
mode = "unsupervised",
enriched.motif = enriched.motif,
dir.out = "result",
cores = 1,
label = "hypo")
Hypo.pair <- get.pair(data = mae,
group.col = "Aged vs Treated",
group1 =  "Treated",
group2 = "Aged",
nearGenes = nearGenes,
raw.pvalue = .1,
permu.dir = "result/permu1",
permu.size = 100, # Please set to 100000 to get significant results
mode = "unsupervised",
Pe = .1, # Please set to 0.001 to get significant results
filter.probes = FALSE, # See preAssociationProbeFiltering function
#filter.percentage = 0.03,
#filter.portion = 0.3,
dir.out = "result",
cores = 1,
label = "hypo")
setwd("~/age/era/motfi")
library(MultiAssayExperiment)
library(ELMER)
library(gridExtra)
library(dplyr)
met <- read.csv("~/age/era/data/meth.csv", row.names=1)
exp <- read.csv("~/age/era/data/expf.csv", row.names=1)
exp=exp[colnames(met)]
assay <- c(rep("DNA methylation", ncol(met)),
rep("Gene expression", ncol(exp)))
primary <- c(colnames(met),colnames(exp))
colname <- c(colnames(met),colnames(exp))
sampleMap <- data.frame(assay,primary,colname)
distal.probes <- get.feature.probe(genome = "hg38",
met.platform = "EPIC")
colData <- data.frame(sample = colnames(met))
colnames(colData)='primary'
rownames(colData) <- colnames(met)
colData$g=c('Aged','Treated','Aged','Treated','Aged','Treated','Aged','Treated')
mae <- createMAE(exp = exp,
met = met,
save = TRUE,
filter.probes = distal.probes,
colData = colData,
sampleMap = sampleMap,
linearize.exp = TRUE,
save.filename = "mae.rda",
met.platform = "EPIC",
genome = "hg38",
TCGA = FALSE)
sig.diff <- get.diff.meth(data = mae,
group.col = "Aged vs Treated",
group1 =  "Treated",
group2 = "Aged",
minSubgroupFrac = 1, # if supervised mode set to 1
sig.dif = .4,
diff.dir = "hypo", # hyper = Search for hypomethylated probes in group 1
cores = 4,
dir.out ="result",
pvalue = 0.9)
colData(data)
View(colData)
View(met)
View(exp)
setwd("~/age/era/motfi")
library(MultiAssayExperiment)
library(ELMER)
library(gridExtra)
library(dplyr)
met <- read.csv("~/age/era/data/meth.csv", row.names=1)
exp <- read.csv("~/age/era/data/expf.csv", row.names=1)
exp=exp[colnames(met)]
assay <- c(rep("DNA methylation", ncol(met)),
rep("Gene expression", ncol(exp)))
primary <- c(colnames(met),colnames(exp))
colname <- c(colnames(met),colnames(exp))
sampleMap <- data.frame(assay,primary,colname)
distal.probes <- get.feature.probe(genome = "hg38",
met.platform = "EPIC")
colData <- data.frame(sample = colnames(met))
colnames(colData)='primary'
rownames(colData) <- colnames(met)
colData$g=c('Aged','Treated','Aged','Treated','Aged','Treated','Aged','Treated')
colData$Group=c('Aged','Treated','Aged','Treated','Aged','Treated','Aged','Treated')
Group
mae <- createMAE(exp = exp,
met = met,
save = TRUE,
filter.probes = distal.probes,
colData = colData,
sampleMap = sampleMap,
linearize.exp = TRUE,
save.filename = "mae.rda",
met.platform = "EPIC",
genome = "hg38",
TCGA = FALSE)
sig.diff <- get.diff.meth(data = mae,
group.col = "Group",
group1 =  "Treated",
group2 = "Aged",
minSubgroupFrac = 1, # if supervised mode set to 1
sig.dif = .4,
diff.dir = "hypo", # hyper = Search for hypomethylated probes in group 1
cores = 4,
dir.out ="result",
pvalue = 0.9)
enriched.motif <- get.enriched.motif(data = mae,
probes = sig.diff$probe,
dir.out = "result",
label = "hypo",
min.incidence = 10,
lower.OR = 2)
TF <- get.TFs(data = mae,
group.col = "Group",
group1 =  "Treated",
group2 = "Aged",
mode = "unsupervised",
enriched.motif = enriched.motif,
dir.out = "result",
cores = 1,
label = "hypo")
nearGenes <- GetNearGenes(data = mae,
probes = sig.diff$probe,
numFlankingGenes = 5) # 10 upstream and 10 dowstream genes
Hypo.pair <- get.pair(data = mae,
group.col = "Group",
group1 =  "Treated",
group2 = "Aged",
nearGenes = nearGenes,
raw.pvalue = .1,
permu.dir = "result/permu1",
permu.size = 100, # Please set to 100000 to get significant results
mode = "unsupervised",
Pe = .1, # Please set to 0.001 to get significant results
filter.probes = FALSE, # See preAssociationProbeFiltering function
#filter.percentage = 0.03,
#filter.portion = 0.3,
dir.out = "result",
cores = 1,
label = "hypo")
cpg='cg23468453'
scatter.plot(data = mae,
byProbe = list(probe = c(cpg), numFlankingGenes = 10),
category = "Treated",
lm = TRUE, # Draw linear regression curve
save = FALSE)
m=(Hypo.pair %>% filter(startsWith(Symbol,'RP')))$Probe
g=(Hypo.pair %>% filter(startsWith(Symbol,'RP')))$GeneID
for (i in c(1:length(m))){
p=scatter.plot(data = mae,
byPair = list(probe = m[i],
gene = g[i]),
category = "Aged vs Treated", save = TRUE, lm_line = TRUE)
p
}
p=scatter.plot(data = mae,
byPair = list(probe = m[i],
gene = g[i]),
category = "Group", save = TRUE, lm_line = TRUE)
p=scatter.plot(data = mae,
byPair = list(probe = m[i],
gene = g[i]),
category = "Group", save = TRUE, lm_line = TRUE)
View(Hypo.pair)
p
pair <- read.csv("result/getPair.hypo.pairs.significant.csv")
schematic.plot(pair = pair,
data = mae,
group.col = "Group",
byProbe = pair$Probe[1],
save = FALSE)
View(Hypo.pair)
schematic.plot(pair = pair,
data = mae,
group.col = "Group",
byProbe = "cg02855302",
save = FALSE)
schematic.plot(pair = pair,
data = mae,
group.col = "Group",
byProbe = "cg23468453",
save = FALSE)
schematic.plot(pair = pair,
data = mae,
group.col = "Group",
byProbe = "cg00442390",
save = FALSE)
View(Hypo.pair)
schematic.plot(pair = pair,
data = mae,
group.col = "Group",
byProbe = "cg06386236",
save = FALSE)
schematic.plot(pair = pair,
data = mae,
group.col = "Group",
byProbe = "cg10844712",
save = FALSE)
enriched.motif <- get.enriched.motif(data = mae,
probes = sig.diff$probe,
dir.out = "result",
label = "hypo",
min.incidence = 10,
lower.OR = 5)
TF <- get.TFs(data = mae,
group.col = "Group",
group1 =  "Treated",
group2 = "Aged",
mode = "unsupervised",
enriched.motif = enriched.motif,
dir.out = "result",
cores = 1,
label = "hypo")
View(TF)
View(TF)
enriched.motif <- get.enriched.motif(data = mae,
probes = sig.diff$probe,
dir.out = "result",
label = "hypo",
min.incidence = 10,
lower.OR = 5)
View(enriched.motif)
View(enriched.motif)
enriched.motif <- get.enriched.motif(data = mae,
probes = sig.diff$probe,
dir.out = "result",
label = "hypo",
min.incidence = 10,
lower.OR = 3)
