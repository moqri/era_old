head(GEcancer[, 1:4])
MethylMixResults <- MethylMix(METcancer, GEcancer, METnormal)
MethylMixResults$MethylationDrivers
MethylMixResults$NrComponents
MethylMixResults$MixtureStates
MethylMixResults$MethylationStates[, 1:5]
MethylMixResults$Classifications[, 1:5]
# Plot the most famous methylated gene for glioblastoma
plots <- MethylMix_PlotModel("MGMT", MethylMixResults, METcancer)
plots$MixtureModelPlot
# Plot all functional and differential genes
for (gene in MethylMixResults$MethylationDrivers) {
MethylMix_PlotModel(gene, MethylMixResults, METcancer, METnormal = METnormal)
}
MethylMix_PlotModel(gene, MethylMixResults, METcancer, METnormal = METnormal)
# Plot all functional and differential genes
for (gene in MethylMixResults$MethylationDrivers) {
MethylMix_PlotModel(gene, MethylMixResults, METcancer, METnormal = METnormal)
}
# Plot all functional and differential genes
for (gene in MethylMixResults$MethylationDrivers) {
MethylMix_PlotModel(gene, MethylMixResults, METcancer, METnormal = METnormal)
}
View(METcancer)
View(METcancer)
data(METcancer)
force(METcancer)
View(METcancer)
data(METnormal)
force(METnormal)
View(METnormal)
View(METnormal)
if (!requireNamespace("BiocManager", quietly=TRUE))
install.packages("BiocManager")
BiocManager::install("TCGAbiolinks")
library(TCGAbiolinks)
library(dplyr)
library(DT)
install.packages('DT
')
library(TCGAbiolinks)
library(dplyr)
library(DT)
version
packageVersion("TCGAbiolinks")
query.met <- GDCquery(project = "TCGA-COAD",
data.category = "DNA Methylation",
legacy = FALSE,
platform = c("Illumina Human Methylation 450"))
query <- GDCquery(project = "TCGA-GBM",
data.category = "Gene expression",
data.type = "Gene expression quantification",
platform = "Illumina HiSeq",
file.type  = "normalized_results",
experimental.strategy = "RNA-Seq",
barcode = c("TCGA-14-0736-02A-01R-2005-01", "TCGA-06-0211-02A-02R-2005-01"),
legacy = TRUE)
GDCdownload(query, method = "api", files.per.chunk = 10)
data <- GDCprepare(query)
View(data)
datatable(as.data.frame(colData(data)),
options = list(scrollX = TRUE, keys = TRUE, pageLength = 5),
rownames = FALSE)
library(datatable)
install.packages("data.table")
install.packages("data.table")
library(data.table)
library(TCGAbiolinks)
library(dplyr)
library(data.table)
datatable(as.data.frame(colData(data)),
options = list(scrollX = TRUE, keys = TRUE, pageLength = 5),
rownames = FALSE)
data.table(as.data.frame(colData(data)),
options = list(scrollX = TRUE, keys = TRUE, pageLength = 5),
rownames = FALSE)
dt=data.table(as.data.frame(colData(data)),
options = list(scrollX = TRUE, keys = TRUE, pageLength = 5),
rownames = FALSE)
View(dt)
rowRanges(data)
# Gene expression aligned against hg38
query <- GDCquery(project = "TCGA-GBM",
data.category = "Transcriptome Profiling",
data.type = "Gene Expression Quantification",
workflow.type = "HTSeq - FPKM-UQ",
barcode = c("TCGA-14-0736-02A-01R-2005-01", "TCGA-06-0211-02A-02R-2005-01"))
GDCdownload(query)
data <- GDCprepare(query)
# Gene expression aligned against hg38
query <- GDCquery(project = "TCGA-GBM",
data.category = "DNA Methylation",
data.type = "Gene Expression Quantification",
workflow.type = "HTSeq - FPKM-UQ",
barcode = c("TCGA-14-0736-02A-01R-2005-01", "TCGA-06-0211-02A-02R-2005-01"))
# Gene expression aligned against hg38
query <- GDCquery(project = "TCGA-GBM",
data.category = "DNA Methylation",
barcode = c("TCGA-14-0736-02A-01R-2005-01", "TCGA-06-0211-02A-02R-2005-01"))
GDCdownload(query.met)
data <- GDCprepare(query.met)
query.met <- GDCquery(project = "VAREPOP-APOLLO",
data.category = "DNA Methylation",
legacy = FALSE,
platform = c("Illumina Human Methylation 450"))
GDCdownload(query.met)
query.met <- GDCquery(project = "TARGET-CCSK",
data.category = "DNA Methylation",
legacy = FALSE,
platform = c("Illumina Human Methylation 450"))
query.met <- GDCquery(project = "TCGA-CHOL",
data.category = "DNA Methylation",
legacy = FALSE,
platform = c("Illumina Human Methylation 450"))
GDCdownload(query.met)
data <- GDCprepare(query.met)
query.met <- GDCquery(project = "TCGA-COAD",
data.category = "DNA Methylation",
legacy = FALSE,
platform = c("Illumina Human Methylation 450"),
bbarcode = ['TCGA-CA-6717'])
query.met <- GDCquery(project = "TCGA-COAD",
data.category = "DNA Methylation",
legacy = FALSE,
platform = c("Illumina Human Methylation 450"),
bbarcode = ['TCGA-CA-6717']))
query.met <- GDCquery(project = "TCGA-COAD",
data.category = "DNA Methylation",
legacy = FALSE,
platform = c("Illumina Human Methylation 450"),
bbarcode = c('TCGA-CA-6717'))
query.met <- GDCquery(project = "TCGA-COAD",
data.category = "DNA Methylation",
legacy = FALSE,
platform = c("Illumina Human Methylation 450"),
barcode = c('TCGA-CA-6717'))
GDCdownload(query.met)
data <- GDCprepare(query.met)
data
View(data)
View(data)
data.table(data)
data$paper_normal_meth
data$paper_methylation
data
data$sample
View(data)
data$assays
data@assays
data@assays[1]
data@assays@data
data@assays@data[1]
data@assays
data@assays$data
data@assays[1]
data@assays
load(data)
data
assay(data)
df=assay(data)
df['cg00040008']
df['cg00040268']
df['cg00040268',]
df['cg04657224',]
query.met <- GDCquery(project = "TCGA-COAD",
data.category = "DNA Methylation",
legacy = FALSE,
platform = c("Illumina Human Methylation 450"))
GDCdownload(query.met)
getResults(query.met, cols = "cases")
query.met <- GDCquery(project = "TCGA-COAD",
data.category = "DNA Methylation",
legacy = FALSE,
platform = c("Illumina Human Methylation 450"),
barcode = getResults(query.met, cols = "cases")[1:2])
GDCdownload(query.met)
data <- GDCprepare(query.met)
df=assay(data)
df['cg04657224',]
query.met <- GDCquery(project = "TCGA-COAD",
data.category = "DNA Methylation",
legacy = FALSE,
platform = c("Illumina Human Methylation 450"),
barcode = getResults(query.met, cols = "cases")[1:5])
GDCdownload(query.met)
data <- GDCprepare(query.met)
df=assay(data)
df['cg04657224',]
df[c('cg04657224','cg04006554','cg03148231'),]
df[c('cg04657224','cg04006554','cg03148231'),]
getResults(query.met, cols = "cases")[1:5]
query.met <- GDCquery(project = "TCGA-COAD",
data.category = "DNA Methylation",
legacy = FALSE,
platform = c("Illumina Human Methylation 450"),
barcode = barcode)
barcode= getResults(query.met, cols = "cases")[1:5]
query.met <- GDCquery(project = "TCGA-COAD",
data.category = "DNA Methylation",
legacy = FALSE,
platform = c("Illumina Human Methylation 450"),
barcode = barcode)
GDCdownload(query.met)
data <- GDCprepare(query.met)
df=assay(data)
df[c('cg04657224','cg04006554','cg03148231'),]
query.met <- GDCquery(project = "TCGA-COAD",
data.category = "DNA Methylation",
legacy = FALSE,
platform = c("Illumina Human Methylation 450"))
barcode= getResults(query.met, cols = "cases")[1:20]
query.met <- GDCquery(project = "TCGA-COAD",
data.category = "DNA Methylation",
legacy = FALSE,
platform = c("Illumina Human Methylation 450"),
barcode=barcode)
GDCdownload(query.met)
data <- GDCprepare(query.met)
df=assay(data)
df[c('cg04657224','cg04006554','cg03148231'),]
df=df[c('cg04657224','cg04006554','cg03148231'),]
View(df)
barcode= getResults(query.met, cols = "cases")[1:30]
query.met <- GDCquery(project = "TCGA-COAD",
data.category = "DNA Methylation",
legacy = FALSE,
platform = c("Illumina Human Methylation 450"),
barcode=barcode)
GDCdownload(query.met)
query.met <- GDCquery(project = "TARGET-ALL-P2",
data.category = "DNA Methylation",
legacy = FALSE,
platform = c("Illumina Human Methylation 450"))
load("/Users/mahdimoqri/Downloads/WeightHistVitals.RData")
View(WeightClinical)
View(WeightClinical)
View(WeightClinical)
View(WeightClinical)
View(WeightClinical)
write.csv(WeightClinical,'WeightClinical.csv')
setwd("~/age/era/motfi")
library(MultiAssayExperiment)
library(ELMER)
library(gridExtra)
library(dplyr)
met <- read.csv("~/age/era/data/meth.csv", row.names=1)
exp <- read.csv("~/age/era/data/expf.csv", row.names=1)
exp=exp[colnames(met)]
assay <- c(rep("DNA methylation", ncol(met)),
rep("Gene expression", ncol(exp)))
primary <- c(colnames(met),colnames(exp))
colname <- c(colnames(met),colnames(exp))
sampleMap <- data.frame(assay,primary,colname)
distal.probes <- get.feature.probe(genome = "hg38",
met.platform = "EPIC")
colData <- data.frame(sample = colnames(met))
colnames(colData)='primary'
rownames(colData) <- colnames(met)
colData$Group=c('Aged','Treated','Aged','Treated','Aged','Treated','Aged','Treated')
mae <- createMAE(exp = exp,
met = met,
save = TRUE,
filter.probes = distal.probes,
colData = colData,
sampleMap = sampleMap,
linearize.exp = TRUE,
save.filename = "mae.rda",
met.platform = "EPIC",
genome = "hg38",
TCGA = FALSE)
setwd("~/age/era/motfi")
library(MultiAssayExperiment)
library(ELMER)
library(gridExtra)
library(dplyr)
met <- read.csv("~/age/era/data/meth.csv", row.names=1)
exp <- read.csv("~/age/era/data/expf.csv", row.names=1)
exp=exp[colnames(met)]
assay <- c(rep("DNA methylation", ncol(met)),
rep("Gene expression", ncol(exp)))
primary <- c(colnames(met),colnames(exp))
colname <- c(colnames(met),colnames(exp))
sampleMap <- data.frame(assay,primary,colname)
distal.probes <- get.feature.probe(genome = "hg38",
met.platform = "EPIC")
setwd("~/age/era/motif")
colData <- data.frame(sample = colnames(met))
colnames(colData)='primary'
rownames(colData) <- colnames(met)
colData$Group=c('Aged','Treated','Aged','Treated','Aged','Treated','Aged','Treated')
mae <- createMAE(exp = exp,
met = met,
save = TRUE,
filter.probes = distal.probes,
colData = colData,
sampleMap = sampleMap,
linearize.exp = TRUE,
save.filename = "mae.rda",
met.platform = "EPIC",
genome = "hg38",
TCGA = FALSE)
sig.diff <- get.diff.meth(data = mae,
group.col = "Group",
group1 =  "Treated",
group2 = "Aged",
minSubgroupFrac = 1, # if supervised mode set to 1
sig.dif = .4,
diff.dir = "hypo", # hyper = Search for hypomethylated probes in group 1
cores = 4,
dir.out ="result",
pvalue = 0.9)
View(exp)
setwd("~/age/era/motif")
library(MultiAssayExperiment)
library(ELMER)
library(gridExtra)
library(dplyr)
met <- read.csv("~/age/era/data/meth.csv", row.names=1)
exp <- read.csv("~/age/era/data/expf.csv", row.names=1)
exp=exp[colnames(met)]
assay <- c(rep("DNA methylation", ncol(met)),
rep("Gene expression", ncol(exp)))
primary <- c(colnames(met),colnames(exp))
colname <- c(colnames(met),colnames(exp))
sampleMap <- data.frame(assay,primary,colname)
distal.probes <- get.feature.probe(genome = "hg38",
met.platform = "EPIC")
colData <- data.frame(sample = colnames(met))
colnames(colData)='primary'
rownames(colData) <- colnames(met)
colData$Group=c('Aged','Treated','Aged','Treated','Aged','Treated','Aged','Treated')
mae <- createMAE(exp = exp,
met = met,
save = TRUE,
filter.probes = distal.probes,
colData = colData,
sampleMap = sampleMap,
linearize.exp = TRUE,
save.filename = "mae.rda",
met.platform = "EPIC",
genome = "hg38",
TCGA = FALSE)
sig.diff <- get.diff.meth(data = mae,
group.col = "Group",
group1 =  "Treated",
group2 = "Aged",
minSubgroupFrac = 1, # if supervised mode set to 1
sig.dif = .4,
diff.dir = "hypo", # hyper = Search for hypomethylated probes in group 1
cores = 4,
dir.out ="result",
pvalue = 0.9)
enriched.motif <- get.enriched.motif(data = mae,
probes = sig.diff$probe,
dir.out = "result",
label = "hypo",
min.incidence = 10,
lower.OR = 3)
sig.diff <- get.diff.meth(data = mae,
group.col = "Group",
group1 =  "Treated",
group2 = "Aged",
minSubgroupFrac = 1, # if supervised mode set to 1
sig.dif = .4,
diff.dir = "hypo", # hyper = Search for hypomethylated probes in group 1
cores = 4,
dir.out ="result",
pvalue = 0.9)
enriched.motif <- get.enriched.motif(data = mae,
probes = sig.diff$probe,
dir.out = "result",
label = "hypo",
min.incidence = 10,
lower.OR = 3)
View(enriched.motif)
View(enriched.motif)
TF <- get.TFs(data = mae,
group.col = "Group",
group1 =  "Treated",
group2 = "Aged",
mode = "unsupervised",
enriched.motif = enriched.motif,
dir.out = "result",
cores = 1,
label = "hypo")
sig.diff <- get.diff.meth(data = mae,
group.col = "Group",
group1 =  "Treated",
group2 = "Aged",
minSubgroupFrac = 1, # if supervised mode set to 1
sig.dif = .3,
diff.dir = "hypo", # hyper = Search for hypomethylated probes in group 1
cores = 4,
dir.out ="result",
pvalue = 0.9)
TF <- get.TFs(data = mae,
group.col = "Group",
group1 =  "Treated",
group2 = "Aged",
mode = "unsupervised",
enriched.motif = enriched.motif,
dir.out = "result",
cores = 1,
label = "hypo")
enriched.motif <- get.enriched.motif(data = mae,
probes = sig.diff$probe,
dir.out = "result",
label = "hypo",
min.incidence = 10,
lower.OR = 3)
enriched.motif <- get.enriched.motif(data = mae,
probes = sig.diff$probe,
dir.out = "result",
label = "hypo",
min.incidence = 10,
lower.OR = 3)
sig.diff <- get.diff.meth(data = mae,
group.col = "Group",
group1 =  "Treated",
group2 = "Aged",
minSubgroupFrac = 1, # if supervised mode set to 1
sig.dif = .4,
diff.dir = "hypo", # hyper = Search for hypomethylated probes in group 1
cores = 4,
dir.out ="result",
pvalue = 0.9)
enriched.motif <- get.enriched.motif(data = mae,
probes = sig.diff$probe,
dir.out = "result",
label = "hypo",
min.incidence = 10,
lower.OR = 2)
View(met)
setwd("~/age/era/motif")
library(MultiAssayExperiment)
library(ELMER)
library(gridExtra)
met <- read.csv("~/age/era/data/vein_meth.csv", row.names=1)
exp <- read.csv("~/age/era/data/expf.csv", row.names=1)
exp=exp[colnames(met)]
assay <- c(rep("DNA methylation", ncol(met)),
rep("Gene expression", ncol(exp)))
primary <- c(colnames(met),colnames(exp))
colname <- c(colnames(met),colnames(exp))
sampleMap <- data.frame(assay,primary,colname)
distal.probes <- get.feature.probe(genome = "hg38",
met.platform = "EPIC")
setwd("~/age/era/motif")
library(MultiAssayExperiment)
library(ELMER)
library(gridExtra)
library(dplyr)
met <- read.csv("~/age/era/data/vein_meth.csv", row.names=1)
exp <- read.csv("~/age/era/data/expf.csv", row.names=1)
exp=exp[colnames(met)]
#exp=exp[colnames(met)]
colnames(exp)=colnames(met) # change
assay <- c(rep("DNA methylation", ncol(met)),
rep("Gene expression", ncol(exp)))
primary <- c(colnames(met),colnames(exp))
colname <- c(colnames(met),colnames(exp))
sampleMap <- data.frame(assay,primary,colname)
distal.probes <- get.feature.probe(genome = "hg38",
met.platform = "EPIC",
rm.chr = paste0("chr",c("X","Y")))
colData <- data.frame(sample = colnames(met))
colnames(colData)='primary'
rownames(colData) <- colnames(met)
colData$Group=c('Aged','Treated','Aged','Treated','Aged','Treated','Aged','Treated')
mae <- createMAE(exp = exp,
met = met,
save = TRUE,
filter.probes = distal.probes,
colData = colData,
sampleMap = sampleMap,
linearize.exp = TRUE,
save.filename = "mae.rda",
met.platform = "EPIC",
genome = "hg38",
TCGA = FALSE)
sig.diff <- get.diff.meth(data = mae,
group.col = "Group",
group1 =  "Treated",
group2 = "Aged",
minSubgroupFrac = 1, # if supervised mode set to 1
sig.dif = .4,
diff.dir = "hypo", # hyper = Search for hypomethylated probes in group 1
cores = 4,
dir.out ="result",
pvalue = 0.9)
enriched.motif <- get.enriched.motif(data = mae,
probes = sig.diff$probe,
dir.out = "result",
label = "hypo",
min.incidence = 10,
lower.OR = 2)
sig.diff <- get.diff.meth(data = mae,
group.col = "Group",
group1 =  "Treated",
group2 = "Aged",
minSubgroupFrac = 1, # if supervised mode set to 1
sig.dif = .3,
diff.dir = "hypo", # hyper = Search for hypomethylated probes in group 1
cores = 4,
dir.out ="result",
pvalue = 0.9)
enriched.motif <- get.enriched.motif(data = mae,
probes = sig.diff$probe,
dir.out = "result",
label = "hypo",
min.incidence = 10,
lower.OR = 2)
